@model TestAPI.ViewModel.OrderViewModel

@{
    ViewBag.Title = "Order Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Html.EnableClientValidation(true);
}

@Html.ValidationSummary()

@{ string functionName = "CreateOrder()";}

@if (Model.ProductId != 0)
{
    functionName = "UpdateOrder()";
}
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <div class="form-group">
        @Html.LabelFor(m => m.CustomerId)
        @Html.DropDownListFor(m => m.CustomerId, new SelectList(Model.Customers, "CustomerId", "FirstName"), "", new { @class = "form-control selectpicker", @Id = "CustomerId" })
        @Html.ValidationMessageFor(m => m.CustomerId)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ProductId)
        @Html.DropDownListFor(m => m.ProductId, new SelectList(Model.Products, "ProductId", "Name"), "",
        new { @class = "form-control selectpicker", @id = "ProductId", @onchange = "GetPrice()" })
        @Html.ValidationMessageFor(m => m.ProductId)
    </div>
    <div class="form-group">
        @Html.Label("Product Price") <br />
        <input id="price" type="text" readonly />
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Quantity)
        @Html.TextBoxFor(m => m.Quantity, new { @class = "form-control", @id = "Quantity", @onchange = "CalculateTotal()" })
        @Html.ValidationMessageFor(m => m.Quantity)
    </div>
    <div class="form-group">
        @Html.Label("Total Order Price") <br />
        <input id="TotalPrice" type="text" readonly />
    </div>
}

<button class="btn btn-primary" id="Submit" onclick=@functionName>Save</button>

@section scripts
{


    <script>

        var yourJavaScriptArray = @Html.Raw(Json.Encode(Model.Products));

        var GetPrice = function () {

            var correctValue;
            var productPrice = document.getElementById('ProductId'),
                price = document.getElementById('price');

            yourJavaScriptArray.forEach(function (item) {
                if (item.ProductId == productPrice.value) {
                    correctValue = item.Price;
                }
            });

            price.value = parseFloat(correctValue);
        }

        var CalculateTotal = function () {
            var orderAmount = document.getElementById('Quantity')
            var totalPrice = document.getElementById('TotalPrice');
            var price = document.getElementById('price');

            totalPrice.value = parseFloat(price.value * orderAmount.value).toFixed(2);
        }


        $(document).ready(function () {

            GetPrice();
            CalculateTotal();

            document.getElementById("Submit").onclick = function () { @functionName };

            function CreateOrder() {
                var order = GetOrder();

                $.ajax({
                    url: "/api/orders",
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(order),
                    success: function () {
                        window.location.replace("/order/orders");
                    },
                });
            }

            function UpdateOrder() {

                var order = GetOrder();

                $.ajax({
                    url: "/api/orders/" + @Model.Id,
                    type: 'PUT',
                    contentType: 'application/json',
                    data: JSON.stringify(order),
                    success: function () {
                        window.location.replace("/order/orders");
                    },
                });
            }

            function GetOrder(){
                var customerId = document.getElementById("CustomerId").value;
                var productId = document.getElementById("ProductId").value;
                var quantity = document.getElementById("Quantity").value;
                var totalAmount = 0;

                var order = {
                    CustomerId:  customerId,
                    ProductId: productId,
                    Quantity: parseInt(quantity),
                    TotalPrice: totalAmount,
                };

                return order;
                }
            }
    );
    </script>
}