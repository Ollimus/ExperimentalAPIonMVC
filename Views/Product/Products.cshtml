@{
    ViewBag.Title = "About";
}

<table class="table">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Producer</th>
            <th scope="col">Name</th>
            <th scope="col">Description</th>
            <th scope="col">Price (€)</th>
            <th scope="col">Stock</th>
            <th scope="col">View</th>
            <th scope="col">Delete</th>
        </tr>
    </thead>
    <tbody id="Products">
    </tbody>
</table>

    @Html.ActionLink("New Product", "ProductManagement", null, new { @class = "btn btn-primary center-block", @id = "CreateNewProduct" })



@section scripts
{
    <script>
        $(document).ready(function () {

            UpdateTable();

            function UpdateTable() {
                $.ajax({
                    url: "/api/products",
                    success: function (result) {

                        //Intentionally using "inefficient" way to handle creation,
                        //the purpose is later to compare the speed of this type of data handling
                        //vs
                        //built in library designed for UX and large data pools.

                        const productElements = document.getElementById("Products");

                        while (productElements.firstChild) {
                            productElements.removeChild(productElements.firstChild);
                        }

                        jQuery.each(result, function (index, value) {
                            $(Products).append(
                                '<tr><td>' + value.ProductId + '</td>' +
                                '<td>' + value.Producer + '</td>' +
                                '<td>' + value.Name + '</td>' +
                                '<td>' + value.Description + '</td>' +
                                '<td>' + value.Price + '</td>' +
                                '<td>' + value.Stock + '</td>' +
                                '<td><a href="ProductManagement/' + value.ProductId + '">View</a></td>' +
                                '<td><button class="js-delete" data-product-id="' + value.ProductId + '">Delete</button></td>');
                        })


                        $("#Products .js-delete").on("click", function () {
                            if (confirm("Delete product?")) {
                                $.ajax({
                                    url: "/api/products/" + $(this).attr("data-product-id"),
                                    method: "DELETE",
                                    success: function () {
                                        UpdateTable();
                                    }
                                })
                            }
                        })
                    }
                })
            }
        });
    </script>
}